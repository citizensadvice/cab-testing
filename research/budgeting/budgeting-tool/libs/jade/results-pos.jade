block settings
	- var title = "Budgeting tool"
	//- var sidebar = true
	//- var toolbars = true
	//- var cookiemonster = true
	- var mockup = true

extends ../template/template.jade

block breadcrumbs
	+breadcrumbs([
		{title: "Home", href: "index.html"}, 
		{title: "Templates", href: "index.html#templates"},
		{title: "Budgeting tool"}])

block section-notice
	aside.section-notice
		h2.screenreader Notice
		.section-notice__content
			p #[span.badge NEW] This page is part of #[a(href="#") our new approach to digital advice].

block script
	script(src="../libs/javascript/vendor/highcharts/highcharts.js")
	script(src="../libs/javascript/vendor/highcharts/modules/exporting.js")
	script.
		// Income values
		var income = [];
		income.push([
			{name: 'Bills'},
			[
				{name: 'sub', y: '2'},
				{name: 'sub', y: '3'},
				{name: 'sub', y: '4'}
			]
		]);
		income.push([
			{name: 'Household'},
			[
				{name: 'sub', y: '5'},
				{name: 'sub', y: '5'},
				{name: 'sub', y: '5'}
			]
		]);
		income.push([
			{name: 'Leisure'},
			[
				{name: 'sub', y: '5'},
				{name: 'sub', y: '5'},
				{name: 'sub', y: '5'}
			]
		]);
		income.push([
			{name: 'Travel', y: '4'}
		]);
		income.push([
			{name: 'Car'},
			[
				{name: 'sub', y: '5'},
				{name: 'sub', y: '5'},
				{name: 'sub', y: '5'}
			]
		]);
		income.push([
			{name: 'Child', y: '5'}
		]);
		income.push([
			{name: 'Family'},
			[
				{name: 'sub', y: '5'},
				{name: 'sub', y: '5'},
				{name: 'sub', y: '5'}
			]
		]);
		income.push([
			{name: 'Debt', y: '5'}
		]);
		income.push([
			{name: 'Savings', y: '5'}
		]);

		// Spending values
		var spending = [];
		spending.push([
			{name: 'Bills'},
			[
				{name: 'sub', y: '5'},
				{name: 'sub', y: '5'},
				{name: 'sub', y: '5'}
			]
		]);
		spending.push([
			{name: 'Household'},
			[
				{name: 'sub', y: '5'},
				{name: 'sub', y: '5'},
				{name: 'sub', y: '5'}
			]
		]);
		spending.push([
			{name: 'Leisure'},
			[
				{name: 'sub', y: '5'},
				{name: 'sub', y: '5'},
				{name: 'sub', y: '5'}
			]
		]);
		spending.push([
			{name: 'Travel', y: '4'}
		]);
		spending.push([
			{name: 'Car', y: '5'},
			[
				{name: 'sub', y: '5'},
				{name: 'sub', y: '5'},
				{name: 'sub', y: '5'}
			]
		]);
		spending.push([
			{name: 'Child', y: '10'}
		]);
		spending.push([
			{name: 'Family'},
			[
				{name: 'sub', y: '5'},
				{name: 'sub', y: '5'},
				{name: 'sub', y: '5'}
			]
		]);
		spending.push([
			{name: 'Debt', y: '5'}
		]);
		spending.push([
			{name: 'Savings', y: '5'}
		]);

		// Work out totals
		var totalIncome = 0;
		$.each(income, function( index, value ) {
			if (value.length > 1) {
				$.each(value[1], function( index, value ) {
					totalIncome += parseInt(value.y);
				});
			} else {
				totalIncome += parseInt(value[0].y);
			}
		});

		var totalSpending = 0;
		$.each(spending, function( index, value ) {
			if (value.length > 1) {
				$.each(value[1], function( index, value ) {
					totalSpending += parseInt(value.y);
				});
			} else {
				totalSpending += parseInt(value[0].y);
			}
		});

		// Build tables
		$(document).ready(function() {

			$.each(income, function( index, value ) {
				if (value.length > 1) {
					var curTotal = 0;
					$.each(value[1], function( index, value ) {
						curTotal += parseInt(value.y);
					});

					$("#income-table #tbody").append('<tr class="table-collapse--toggle"><td>'+value[0].name+'</td><td class="amount">£'+curTotal+'</td></tr>');

					$("#income-table #tbody").append('<tr class="table-collapse"><td colspan="2"><table class="full-width" data-id="'+index+'"><tbody></tbody></table></td></tr>');

					var curIndex = index;
					$.each(value[1], function( index, value ) {
						$('#income-table table[data-id="'+curIndex+'"]').append('<tr><td>'+value.name+'</td><td class="amount">£'+value.y+'</td></tr>');
					});

				} else {

					$.each(value, function( index, value ) {
						$("#income-table #tbody").append('<tr><td>'+value.name+'</td><td class="amount">£'+value.y+'</td></tr>');
					});
				}
			});
			$("#income-table #tbody").append('<tr class="total"><td>Total</td><td class="amount">£'+totalIncome+'</td></tr>');

			$.each(spending, function( index, value ) {
				if (value.length > 1) {
					var curTotal = 0;
					$.each(value[1], function( index, value ) {
						curTotal += parseInt(value.y);
					});

					$("#spending-table #tbody").append('<tr class="table-collapse--toggle"><td>'+value[0].name+'</td><td class="amount">£'+curTotal+'</td></tr>');

					$("#spending-table #tbody").append('<tr class="table-collapse"><td colspan="2"><table class="full-width" data-id="'+index+'"><tbody></tbody></table></td></tr>');

					var curIndex = index;
					$.each(value[1], function( index, value ) {
						$('#spending-table table[data-id="'+curIndex+'"]').append('<tr><td>'+value.name+'</td><td class="amount">£'+value.y+'</td></tr>');
					});

				} else {

					$.each(value, function( index, value ) {
						$("#spending-table #tbody").append('<tr><td>'+value.name+'</td><td class="amount">£'+value.y+'</td></tr>');
					});
				}
			});
			$("#spending-table #tbody").append('<tr class="total"><td>Total</td><td class="amount">£'+totalSpending+'</td></tr>');

		});

		// Create overview chart
		$(function () {
			var chart = new Highcharts.Chart({
				colors: ['#004B88', '#FCBB69'],
				chart: {
					type: 'column',
					renderTo: 'overview-chart',
					backgroundColor:'rgba(255,255,255,0)'
				},
				title: {
					text: null
				},
				xAxis: {
					labels: {
						enabled: false
					}
				},
				yAxis: {
					title:
					{
						enabled: false
					}
				},
				tooltip: {
					formatter: function () {
						return this.series.name + ': <b>£' + this.y + '</b>';
					}
				},
				credits: {
					enabled: false
				},
				series: [{
					name: 'Income',
					data: JSON.parse("["+totalIncome+"]")
				},
						{
					name: 'Spending',
					data: JSON.parse("["+totalSpending+"]")
				}],
				navigation: {
					buttonOptions: {
						enabled: false
					}
				}
			});
		});

		// Create income chart
		$(function () {
			var chart = new Highcharts.Chart({
				colors: ['#f8a980', '#ffbf47', '#b9db9b', '#a5bddc', '#b5afd7', '#81cec6', '#f499be', '#e76568', '#87c3d0'],
				chart: {
					type: 'pie',
					renderTo: 'income-chart',
					backgroundColor:'#f2f2f2'
				},
				title: {
					text: null
				},
				tooltip: {
					formatter: function () {
						return this.point.name + ': <b>£' + this.y + '</b>';
					}
				},
				plotOptions: {
					pie: {
						allowPointSelect: false,
						cursor: 'pointer',
						dataLabels: {
							enabled: true
						},
						showInLegend: false
					}
				},
				credits: {
					enabled: false
				},
				series: [{
					name: 'Income',
					colorByPoint: true,
					data: [{
						name: 'Wages',
						y: 50
					}, {
						name: 'Lodger(s)',
						y: 50
					}, {
						name: 'Pension',
						y: 50
					}, {
						name: 'Child Support',
						y: 50
					}, {
						name: 'Benefits',
						y: 50
					}],
					dataLabels: {
						formatter: function () {
							return this.point.name + ' £' + this.y;
						}
					}
				}],
				navigation: {
					buttonOptions: {
						enabled: false
					}
				}
			});
		});

		// Create spending chart
		$(function () {
			var chart = new Highcharts.Chart({
				colors: ['#f8a980', '#ffbf47', '#b9db9b', '#a5bddc', '#b5afd7', '#81cec6', '#f499be', '#e76568', '#87c3d0'],
				chart: {
					type: 'pie',
					renderTo: 'spending-chart',
					backgroundColor:'#f2f2f2'
				},
				title: {
					text: null
				},
				tooltip: {
					formatter: function () {
						return this.point.name + ': <b>£' + this.y + '</b>';
					}
				},
				plotOptions: {
					pie: {
						allowPointSelect: false,
						cursor: 'pointer',
						dataLabels: {
							enabled: true
						},
						showInLegend: false
					}
				},
				credits: {
					enabled: false
				},
				series: [{
					name: 'Spending',
					colorByPoint: true,
					data: JSON.parse(spending),
					dataLabels: {
						formatter: function () {
							return this.point.name + ' £' + this.y;
						}
					}
				}],
				navigation: {
					buttonOptions: {
						enabled: false
					}
				}
			});
		});

		$(document).ready(function() {
			var x = 0;
			$(".side-nav-beta.tools").each(function() {
				$("a", this).each(function() {
					if(x>0){
						$(this).prepend( x +'. ');
					}
					x++;
				});
			});
		});
				
block content
	.articleContent
		.main-content__right
			
			h2 Results

			p 
				| Total monthly income: #[strong £250.00]
				br
				| Total spending: #[strong £450.00]

			h3 You are spending £200 more than your income
			//h3 You are spending [UnderAmount] less than your income

			.well
				div#overview-chart(style="min-width: 300px; margin: 0 auto;")

			ul
				li 
					a.a-pdf-doc Download your full budget sheet to save or print
				li 
					a(href="#detailed") See a detailed breakdown of your income and spending

			.callout--confirmation
				h3 You’ve got some money left each month

				p As you’ve got some money spare each month you could consider:
				ul
					li #[a(href="") saving some money]
					li increasing your repayments, if you’re repaying debts

			.callout--alert
				h3 Your living costs 

				p The amounts you put in for the following areas look a bit high. There might be good reasons for this, but it might be worth checking if you can cut your costs in these areas:
				ul
					li Gas and electricity - short para of advice and LINK
					li Phone/TV/broadband - short para of advice and LINK 
					li Food - short para of advice and LINK 
					li Insurance - short para of advice and LINK 

			h3 Dealing with debts

			p If you have debts your budget can be used to help find the right debt solution for your circumstances. The options available to you depend on how much (if any) spare income you have each month. You can see our content on #[a(href="") getting out of debt], or get help from your #[a(href="") local Citizens Advice]. 

			h3 Tips for keeping on top of your budget

			p Keep a spending diary for a month to keep track of exactly what you spend. You could keep receipts and write down everything you spend your money on or use a spending diary app on your mobile phone.
			ul
				li Sign up for text balance alerts from your bank - this can help you keep on top of your bank balance.
				li Sign up for online banking - it can be quicker and easier to check your bank balance.

			p Some local Citizens Advice offices also run free sessions on budgeting and managing your money. They cover things like:
			ul
				li how to reduce your costs
				li how to budget
				li how to set up and use a bank account
				li how to set up standing orders and direct debits 

			p Ask #[a(href="") local Citizens Advice] whether they offer these services.

			h2#detailed Income breakdown

			table#income-table.full-width
				thead
					tr
						th(scope="col", colspan="2") Income
				tbody#tbody

			.well
				div#income-chart(style="min-width: 310px; margin: 0 auto;")

			h2 Spending breakdown

			table#spending-table.full-width
				thead
					tr
						th(scope="col", colspan="2") Spending
				tbody#tbody
			
			.well
				//div#desktop-spending-chart.hide-mobile(style="min-width: 310px; margin: 0 auto;")
				div#spending-chart(style="min-width: 310px; margin: 0 auto;")

		include sidebar.jade